SQL Requests

1.Написать запрос, считающий суммарное количество имеющихся на сайте новостей и обзоров.

SELECT sum(two_tables.num_news_reviews) AS sum
FROM (
	SELECT count(*) AS num_news_reviews
    FROM reviews
    
    UNION
    
    SELECT count(*) AS num_news_reviews
    FROM news
) two_tables

2.Написать запрос, показывающий список категорий новостей и количество новостей в каждой категории.

SELECT nc_name, count(n_id)
FROM news_categories 
LEFT JOIN news ON n_category=nc_id 
GROUP BY nc_name

3. Написать запрос, показывающий список категорий обзоров и количество обзоров в каждой категории.

SELECT rc_name, count(r_id)
FROM reviews_categories 
LEFT JOIN reviews ON r_category=rc_id 
GROUP BY rc_name

4.Написать запрос, показывающий список категорий новостей, категорий обзоров и дату самой свежей публикации в каждой категории.

SELECT rc_name, max(r_dt)
FROM reviews_categories 
JOIN reviews ON rc_id=r_category 
GROUP BY rc_name

UNION

SELECT nc_name, max(n_dt)
FROM news_categories 
JOIN news ON nc_id=n_category
GROUP BY nc_name

5.Написать запрос, показывающий список страниц сайта верхнего уровня (у таких страниц нет родительской страницы) и список баннеров для каждой такой страницы.

SELECT p_name, banners.b_id, b_url
FROM pages
JOIN m2m_banners_pages  USING(p_id)
JOIN banners USING(b_id)
WHERE p_parent IS NULL

6.Написать запрос, показывающий список страниц сайта, на которых есть баннеры.

SELECT DISTINCT p_name 
FROM pages
JOIN m2m_banners_pages USING (p_id)

7.Написать запрос, показывающий список страниц сайта, на которых нет баннеров.

SELECT DISTINCT p_name 
FROM pages
WHERE p_id NOT IN (
	select p_id
    FROM m2m_banners_pages)

8.Написать запрос, показывающий список баннеров, размещённых хотя бы на одной странице сайта.

SELECT DISTINCT b_id, b_url 
FROM banners
JOIN m2m_banners_pages USING(b_id)

9.Написать запрос, показывающий список баннеров, не размещённых ни на одной странице сайта.

SELECT DISTINCT b_id, b_url 
FROM banners
WHERE b_id NOT IN (
	SELECT b_id
    FROM m2m_banners_pages)

10.Написать запрос, показывающий баннеры, для которых отношение кликов к показам >= 80% (при условии, что баннер был показан хотя бы один раз).

SELECT *
FROM (
	SELECT b_id, b_url, b_click/b_show*100 AS rate
	FROM banners
    WHERE b_show<>0
    ) AS s
WHERE s.rate>=80

11.Написать запрос, показывающий список страниц сайта, на которых показаны баннеры с текстом (в поле `b_text` не NULL).

SELECT DISTINCT p_name
FROM pages
JOIN m2m_banners_pages USING (p_id)
JOIN banners USING (b_id)
WHERE b_text IS NOT NULL

12.Написать запрос, показывающий список страниц сайта, на которых показаны баннеры с картинкой (в поле `b_pic` не NULL).

SELECT DISTINCT p_name
FROM pages
JOIN m2m_banners_pages USING (p_id)
JOIN banners USING (b_id)
WHERE b_pic IS NOT NULL

13.Написать запрос, показывающий список публикаций (новостей и обзоров) за 2011-й год.

SELECT n_header AS header, n_dt AS date
FROM news
WHERE YEAR(n_dt)=2011

UNION

SELECT r_header, r_dt
FROM reviews
WHERE YEAR(r_dt)=2011

14.Написать запрос, показывающий список категорий публикаций (новостей и обзоров), в которых нет публикаций.

SELECT nc_name
FROM news_categories
WHERE nc_id NOT IN (
					SELECT n_category
                    FROM news)
                    
UNION

SELECT rc_name
FROM reviews_categories
WHERE rc_id NOT IN (
					SELECT r_category
                    FROM reviews)

15.Написать запрос, показывающий список новостей из категории «Логистика» за 2012-й год.

SELECT n_header, n_dt
FROM news
JOIN news_categories ON n_category=nc_id
WHERE nc_name="Логистика" AND YEAR(n_dt)=2012

16.Написать запрос, показывающий список годов, за которые есть новости, а также количество новостей за каждый из годов.

SELECT YEAR(n_dt) AS year, COUNT(*)
FROM news
GROUP BY year

17.Написать запрос, показывающий URL и id таких баннеров, где для одного и того же URL есть несколько баннеров.

SELECT b_url, b_id
FROM banners
WHERE b_url IN (SELECT b_url
                FROM banners
                GROUP BY b_url
                HAVING COUNT(*) > 1)

18.Написать запрос, показывающий список непосредственных подстраниц страницы «Юридическим лицам» со списком баннеров этих подстраниц.

SELECT b_url, b_id
FROM banners
WHERE b_url IN (SELECT b_url
                FROM banners
                GROUP BY b_url
                HAVING COUNT(*) > 1)

19.Написать запрос, показывающий список всех баннеров с картинками (поле `b_pic` не NULL), отсортированный по убыванию отношения кликов по баннеру к показам баннера.

SELECT b_id, b_url, b_click/b_show*100 AS rate
FROM banners
WHERE b_show<>0 and b_pic IS NOT NULL
ORDER BY rate DESC

20.Написать запрос, показывающий самую старую публикацию на сайте (не важно – новость это или обзор).

SELECT header, date
FROM (
		SELECT n_header AS header, n_dt AS date
        FROM news
        
        UNION
        
        SELECT r_header AS header, r_dt AS date
        FROM reviews
        ) AS t
WHERE date = (
			SELECT LEAST(MIN(n_dt), MIN(r_dt))
            FROM news, reviews)

21.Написать запрос, показывающий список баннеров, URL которых встречается в таблице один раз.

SELECT b_url, b_id
FROM banners
WHERE b_url IN (SELECT b_url
                FROM banners
                GROUP BY b_url
                HAVING COUNT(*) = 1)

22.Написать запрос, показывающий список страниц сайта в порядке убывания количества баннеров, расположенных на странице. Для случаев, когда на нескольких страницах расположено одинаковое количество баннеров, этот список страниц должен быть отсортирован по возрастанию имён страниц.

SELECT p_name, COUNT(b_id) AS banners_count
FROM pages
JOIN m2m_banners_pages USING(p_id)
JOIN banners USING(b_id)
GROUP BY p_name
ORDER BY banners_count DESC, p_name ASC

23.Написать запрос, показывающий самую «свежую» новость и самый «свежий» обзор.

SELECT *
FROM (
	SELECT MAX(n_dt) AS date
        from news
        
        union
        
        select  MAX(r_dt) AS date
        from reviews) AS s

24.Написать запрос, показывающий баннеры, в тексте которых встречается часть URL, на который ссылается баннер.

SELECT b_id, b_url, b_text
FROM banners 
WHERE b_text = (
		SELECT substring(b_url, 8)
                )

25.Написать запрос, показывающий страницу, на которой размещён баннер с самым высоким отношением кликов к показам.

SELECT p_name
FROM pages
JOIN m2m_banners_pages USING(p_id)
JOIN banners USING(b_id)
ORDER BY b_click/b_show DESC
LIMIT 1

26.Написать запрос, считающий среднее отношение кликов к показам по всем баннерам, которые были показаны хотя бы один раз.

SELECT AVG(b_click/b_show)
FROM banners
WHERE b_show <> 0 

27.Написать запрос, считающий среднее отношение кликов к показам по баннерам, у которых нет графической части (поле `b_pic` равно NULL).

SELECT AVG(b_click/b_show)
FROM banners
WHERE b_show <> 0 AND b_pic IS NULL

28.Написать запрос, показывающий количество баннеров, размещённых на страницах сайта верхнего уровня (у таких страниц нет родительских страниц).

SELECT COUNT(b_id) AS COUNT
FROM banners
JOIN m2m_banners_pages USING(b_id)
JOIN pages USING(p_id)
WHERE p_parent IS NULL

29.Написать запрос, показывающий баннер(ы), который(ые) показаны на самом большом количестве страниц. 

SELECT banners.b_id, b_url, MAX(count_outer) 
FROM banners, (
				SELECT COUNT(*) AS count_outer, b_id 
                FROM m2m_banners_pages
                GROUP BY b_id
				) t1
WHERE banners.b_id= t1.b_id AND count_outer = (
												SELECT MAX(count_inner) 
                                                FROM (
                                                	  SELECT COUNT(*) AS count_inner 
                                              		  FROM m2m_banners_pages
                                                	  GROUP BY b_id
                                                ) t2
											)
GROUP BY b_id

30.Написать запрос, показывающий страницу(ы), на которой(ых) показано больше всего баннеров.

SELECT p_name, count_outer 
FROM pages, (
			SELECT p_id, COUNT(*) AS count_outer 
			FROM m2m_banners_pages
			GROUP BY p_id
			) t1
WHERE pages.p_id = t1.p_id AND count_outer = (
										SELECT MAX(count_inner) 
                                        FROM (
											SELECT COUNT(*) AS count_inner 
											FROM m2m_banners_pages
											GROUP BY p_id
											) t2
										)


